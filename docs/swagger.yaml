definitions:
  swagger.SwaggerAccessResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  swagger.SwaggerMeResponse:
    properties:
      guid:
        type: integer
    type: object
  swagger.SwaggerNewError:
    properties:
      error:
        type: string
    type: object
  swagger.SwaggerRefreshRequest:
    properties:
      refresh:
        type: string
    required:
    - refresh
    type: object
  swagger.SwaggerValidateData:
    properties:
      error:
        type: string
      fields:
        items:
          type: string
        type: array
    type: object
info:
  contact: {}
paths:
  /access/{guid}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Идентификатор пользователя
        in: path
        name: guid
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/swagger.SwaggerAccessResponse'
        "400":
          description: Ошибка создания токена
          schema:
            $ref: '#/definitions/swagger.SwaggerNewError'
        "500":
          description: Ошибка парсинга UserAgent
          schema:
            $ref: '#/definitions/swagger.SwaggerNewError'
      summary: Получить пару access, refresh токенов
      tags:
      - Auth
  /logout:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "204":
          description: Успешно
        "400":
          description: Ошибка выхода
          schema:
            $ref: '#/definitions/swagger.SwaggerNewError'
        "401":
          description: Валидный токен не найден
          schema:
            $ref: '#/definitions/swagger.SwaggerNewError'
        "500":
          description: Ошибка парсинга UserAgent
          schema:
            $ref: '#/definitions/swagger.SwaggerNewError'
      security:
      - BearerAuth: []
      summary: Осуществить logout по access токену
      tags:
      - Auth
  /me:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/swagger.SwaggerMeResponse'
        "400":
          description: Неверный токен
          schema:
            $ref: '#/definitions/swagger.SwaggerNewError'
        "401":
          description: Валидный токен не найден
          schema:
            $ref: '#/definitions/swagger.SwaggerNewError'
        "500":
          description: Ошибка парсинга UserAgent
          schema:
            $ref: '#/definitions/swagger.SwaggerNewError'
      security:
      - BearerAuth: []
      summary: Получение guid текущего пользователя
      tags:
      - Auth
  /refresh:
    post:
      consumes:
      - application/json
      parameters:
      - description: Refresh токен
        in: body
        name: person
        required: true
        schema:
          $ref: '#/definitions/swagger.SwaggerRefreshRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/swagger.SwaggerAccessResponse'
        "400":
          description: Ошибка обновления токена
          schema:
            $ref: '#/definitions/swagger.SwaggerNewError'
        "401":
          description: Валидный токен не найден
          schema:
            $ref: '#/definitions/swagger.SwaggerNewError'
        "500":
          description: Ошибка парсинга UserAgent
          schema:
            $ref: '#/definitions/swagger.SwaggerNewError'
      security:
      - BearerAuth: []
      summary: Получить новый access токен
      tags:
      - Auth
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
